/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import algo.BarChart3D;
import algo.LineChartGraph;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

/**
 *
 * @author vision soft
 */
public class GRaphJInternalFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form GRaphJInternalFrame
     */
    public GRaphJInternalFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);

        jButton1.setText("Reward Vs Episodes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Product");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Reward Vs LR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Reward Vs Discount");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label1.setForeground(new java.awt.Color(0, 0, 153));
        label1.setText("Single Agent");

        label2.setAlignment(java.awt.Label.CENTER);
        label2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label2.setForeground(new java.awt.Color(0, 0, 153));
        label2.setText("Miltiple Agent");

        jButton5.setText("Reward Vs Episodes");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("Reward Vs LR");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Reward Vs Discount");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("iteartionvsrevrd.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs Episodes", "Reward", "Episodes", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
       
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
         ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("product.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        BarChart3D demo = new BarChart3D("Product ", "Frquncy", "Product", al,  xtable,series);
//if("No of Record"==series)

        demo.pack();
        java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
                 ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("lrrevrd.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs LR", "Reward", "LR", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
                        ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("gammarevrd.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs Discount Rate", "Reward", "DR", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
         ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("csiteartionvsrevrd.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs Episodes", "Reward", "Episodes", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
       
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
          ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("cslrrevrd.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs LR", "Reward", "LR", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
         ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("csgammarevrd.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs Discount Rate", "Reward", "DR", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton8ActionPerformed

    public static void main(String[] args) {
        GRaphJInternalFrame gr=new GRaphJInternalFrame();
        gr.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private java.awt.Label label1;
    private java.awt.Label label2;
    // End of variables declaration//GEN-END:variables
}
