/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import algo.BarChart3D;
import algo.LineChartGraph;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

/**
 *
 * @author vision soft
 */
public class GRaphJInternalFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form GRaphJInternalFrame
     */
    public GRaphJInternalFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        label2 = new java.awt.Label();
        label1 = new java.awt.Label();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        panel2 = new java.awt.Panel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        panel3 = new java.awt.Panel();
        label6 = new java.awt.Label();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setTitle("Graph");

        jButton8.setText("Reward Vs Discount");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton7.setText("Reward Vs LR");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton5.setText("Reward Vs Episodes");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        label2.setAlignment(java.awt.Label.CENTER);
        label2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label2.setForeground(new java.awt.Color(0, 0, 153));
        label2.setText("Miltiple Agent (Normal)");

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label1.setForeground(new java.awt.Color(0, 0, 153));
        label1.setText("Single Agent");

        jButton2.setText("Product");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Reward Vs Episodes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Reward Vs LR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Reward Vs Discount");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel1Layout.createSequentialGroup()
                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                            .addGap(11, 11, 11)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(35, 35, 35))
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(36, 36, 36)))
                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(220, Short.MAX_VALUE))
            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(60, 60, 60)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addGap(51, 51, 51)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jButton9.setText("Reward Vs Discount");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Reward Vs LR");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton6.setText("Reward Vs Episodes");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        label3.setAlignment(java.awt.Label.CENTER);
        label3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label3.setForeground(new java.awt.Color(0, 0, 153));
        label3.setText("Miltiple Agent (Positive)");

        label4.setAlignment(java.awt.Label.CENTER);
        label4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label4.setForeground(new java.awt.Color(0, 0, 153));
        label4.setText("Miltiple Agent (Abs)");

        jButton12.setText("Reward Vs Episodes");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Reward Vs LR");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Reward Vs Discount");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(395, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel2Layout.createSequentialGroup()
                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31))))
            .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel2Layout.createSequentialGroup()
                    .addGap(375, 375, 375)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(30, Short.MAX_VALUE)))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(151, Short.MAX_VALUE)))
        );

        label6.setAlignment(java.awt.Label.CENTER);
        label6.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label6.setForeground(new java.awt.Color(0, 0, 153));
        label6.setText("Miltiple Agent (Neg)");

        jButton18.setText("Reward Vs Episodes");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("Reward Vs LR");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton20.setText("Reward Vs Discount");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                .addContainerGap(196, Short.MAX_VALUE)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(206, 206, 206))
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/iteartionvsrevrd.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs Episodes", "Reward", "Episodes", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
       
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
         ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/product.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        BarChart3D demo = new BarChart3D("Product ", "Frquncy", "Product", al,  xtable,series);
//if("No of Record"==series)

        demo.pack();
        java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
                 ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/lrrevrd.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs LR", "Reward", "LR", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
                        ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/gammarevrd.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs Discount Rate", "Reward", "DR", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
         ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/csiteartionvsrevrd0.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs Episodes (MA Normal)", "Reward", "Episodes", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
       
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
          ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/cslrrevrd0.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs LR (MA Normal)", "Reward", "LR", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
         ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parametercdgammarevrd0.txt
            FileInputStream fstream = new FileInputStream("graph/cdgammarevrd0.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs Discount Rate (MA Normal)", "Reward", "DR", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/cdgammarevrd2.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs Discount Rate (MA Positive)", "Reward", "DR", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
          ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/cslrrevrd2.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs LR (MA Positive)", "Reward", "LR", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
         
         ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/csiteartionvsrevrd2.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs Episodes (MA Positive)", "Reward", "Episodes", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
       
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
         
         ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/csiteartionvsrevrd1.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs Episodes (MA Abs)", "Reward", "Episodes", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
       
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
          ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/cslrrevrd1.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs LR (MA Abs)", "Reward", "LR", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/cdgammarevrd1.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs Discount Rate (MA Abs)", "Reward", "DR", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
         
         ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/csiteartionvsrevrd3.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs Episodes (MA Negative)", "Reward", "Episodes", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
       
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
          ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/cslrrevrd3.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs LR (MA Negative)", "Reward", "LR", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        
        ArrayList xtable = new ArrayList();

        ArrayList series = new ArrayList();

        ArrayList<ArrayList> al = new ArrayList();

        try {
            // Open the file that is the first 
            // command line parameter
            FileInputStream fstream = new FileInputStream("graph/cdgammarevrd3.txt");
            // Get the object of DataInputStream
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
            //Read File Line By Line
            while ((strLine = br.readLine()) != null) {
                // Print the content on the console
                StringTokenizer st = new StringTokenizer(strLine, ",");
                String keyword = "";
                String pre = "";
                String xseris = "";
                if (st.countTokens() >= 3) {
                    xseris = st.nextToken();
                    pre = st.nextToken();
                    keyword = st.nextToken();
                    if (xtable.indexOf(keyword) == -1) {
                        xtable.add(keyword);
                    }
                    if (series.indexOf(xseris) == -1) {
                        series.add(xseris);
                    }
                    if (xtable.indexOf(keyword) >= al.size()) {
                        al.add(new ArrayList());
                    }
                    al.get(xtable.indexOf(keyword)).add(new Double(pre));
                }
                System.out.println(strLine);
            }
            //Close the input stream
            in.close();
        } catch (Exception e) {//Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }

        LineChartGraph demo = new LineChartGraph("Reward Vs Discount Rate (MA Negative)", "Reward", "DR", al, series, xtable);
//if("No of Record"==series)

        demo.pack();
          java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        // Get the screen dimensions.
        java.awt.Dimension screen = tk.getScreenSize();
   
        int fw = (int) (screen.getWidth());
        int fh = (int) (screen.getWidth());
        java.awt.Dimension fs =demo.getSize();
        int lx = (int) (screen.getWidth() / 2 - fs.getWidth() / 2);
        int ly = (int) (screen.getHeight() / 2 - fs.getHeight() / 2);
        demo.setLocation(lx, ly);
        getParent().add(demo);
        demo.show();
    }//GEN-LAST:event_jButton20ActionPerformed

    public static void main(String[] args) {
        GRaphJInternalFrame gr=new GRaphJInternalFrame();
        gr.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label6;
    private java.awt.Panel panel1;
    private java.awt.Panel panel2;
    private java.awt.Panel panel3;
    // End of variables declaration//GEN-END:variables
}
